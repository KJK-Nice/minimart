// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package layouts

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"minimart/internal/shared/templates/components"
	"minimart/types"
)

// PageData contains common page data
type PageData struct {
	Title string
	User  *types.User
}

func Base(title string, user *types.User) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\" class=\"h-full\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/shared/templates/layouts/base.templ`, Line: 20, Col: 22}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, " - Minimart</title><!-- Tailwind CSS --><script src=\"https://cdn.tailwindcss.com\"></script><!-- Datastar --><script type=\"module\" src=\"https://cdn.jsdelivr.net/gh/starfederation/datastar@main/bundles/datastar.js\"></script><!-- Custom styles --><link rel=\"stylesheet\" href=\"/static/css/app.css\"><!-- Bitcoin/Satoshi styling --><style>\n            .bitcoin-amount { font-family: 'Monaco', 'Menlo', monospace; }\n            .status-pending { @apply bg-yellow-100 text-yellow-800; }\n            .status-accepted { @apply bg-blue-100 text-blue-800; }\n            .status-preparing { @apply bg-orange-100 text-orange-800; }\n            .status-ready { @apply bg-green-100 text-green-800; }\n            .status-completed { @apply bg-gray-100 text-gray-800; }\n            .status-cancelled, .status-rejected { @apply bg-red-100 text-red-800; }\n        </style></head><body class=\"h-full bg-gray-50\" data-signals='{\n        \"toast\": {\n            \"show\": false,\n            \"message\": \"\",\n            \"type\": \"info\"\n        }\n    }'><!-- Navigation -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Nav(user).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<!-- Toast notifications --><div id=\"toast-container\" class=\"fixed top-4 right-4 z-50\"><div data-show=\"$toast.show\" data-class=\"{\n                    'translate-x-full': !$toast.show,\n                    'translate-x-0': $toast.show,\n                    'bg-green-500': $toast.type === 'success',\n                    'bg-red-500': $toast.type === 'error',\n                    'bg-blue-500': $toast.type === 'info',\n                    'bg-yellow-500': $toast.type === 'warning'\n                }\" class=\"transform transition-transform duration-300 ease-in-out max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5\"><div class=\"p-4\"><div class=\"flex items-start\"><div class=\"ml-3 w-0 flex-1 pt-0.5\"><p class=\"text-sm font-medium text-white\" data-text=\"$toast.message\"></p></div><div class=\"ml-4 flex-shrink-0 flex\"><button data-on-click=\"$toast.show = false\" class=\"bg-white rounded-md inline-flex text-gray-400 hover:text-gray-600 focus:outline-none\"><span class=\"sr-only\">Close</span> <svg class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"></path></svg></button></div></div></div></div></div><!-- Main content --><main class=\"flex-1\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</main><!-- Footer -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Footer().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<!-- Custom JavaScript --><script src=\"/static/js/app.js\"></script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
